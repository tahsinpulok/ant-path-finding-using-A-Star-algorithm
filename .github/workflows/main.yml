name: Build and Release

on:
  push:
    tags:
      - 'v*'

env:
  JVM_ARGS: "-Xmx2G"
  FILE_NAME: ant-path-finding # Name of the JAR file (All lowercase, no spaces, no underscores)
  ICON_NAME: antPathFinding-512
  MAIN_CLASS: App
  OUT_DIR: target
  VERSION: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      stripped_version: ${{ steps.get_stripped_version.outputs.version }}

    steps:
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Get stripped version
      id: get_stripped_version
      run: |
        STRIPPED_VERSION=${VERSION#v}
        echo "Stripped version: $STRIPPED_VERSION"
        echo "::set-output name=version::$STRIPPED_VERSION"

    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Extract release notes from changelog
      id: changelog_reader
      uses: mindsers/changelog-reader-action@v2.2.1
      with:
        validation_level: warn
        version: ${{ env.VERSION }}
        path: ./CHANGELOG.md

    - name: Compile and Build JAR
      run: mvn clean package


    - name: Upload JAR as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FILE_NAME }}-${{ steps.get_stripped_version.outputs.version }}.jar
        path: ${{ env.OUT_DIR }}/${{ env.FILE_NAME }}-${{ steps.get_stripped_version.outputs.version }}.jar

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref_name }}
        body: ${{ steps.changelog_reader.outputs.changes }}

    - name: Attach JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ${{ env.OUT_DIR }}/${{ env.FILE_NAME }}-${{ steps.get_stripped_version.outputs.version }}.jar
        asset_name: ${{ env.FILE_NAME }}-${{ steps.get_stripped_version.outputs.version }}.jar
        asset_content_type: application/java-archive  
  

  macos_build:
    needs: build
    runs-on: macOS-latest

    steps:
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download JAR from artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.jar
        path: ${{ env.OUT_DIR }}
    
    - name: Create Standalone for MacOS
      run: |
        jpackage --input ${{ env.OUT_DIR }} \
                  --name ${{ env.FILE_NAME }} \
                  --main-jar ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.jar \
                  --main-class ${{ env.MAIN_CLASS }} \
                  --icon assets/icon/${{ env.ICON_NAME }}.icns \
                  --app-version ${{ needs.build.outputs.stripped_version }} \
                  --java-options "${{ env.JVM_ARGS }}" \
                  --type dmg \
                  --dest .


    - name: List contents of out directory
      run: ls ${{ env.OUT_DIR }}

    - name: Attach MacOS Standalone to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.release_upload_url }}
        asset_path: ./${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.dmg
        asset_name: ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}-MacOS.dmg
        asset_content_type: application/octet-stream

  ubuntu_build:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download JAR from artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.jar
        path: ${{ env.OUT_DIR }}

    - name: Create Standalone for Ubuntu
      run: |
        jpackage --input ${{ env.OUT_DIR }} \
                  --name ${{ env.FILE_NAME }} \
                  --main-jar ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.jar \
                  --main-class ${{ env.MAIN_CLASS }} \
                  --resource-dir assets \
                  --icon assets/icon/${{ env.ICON_NAME }}.png \
                  --app-version ${{ needs.build.outputs.stripped_version }} \
                  --java-options "${{ env.JVM_ARGS }}" \
                  --type deb \
                  --dest .

    - name: List contents of out directory
      run: ls -lh .

    - name: Attach Ubuntu Standalone to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.release_upload_url }}
        asset_path: ./${{ env.FILE_NAME }}_${{ needs.build.outputs.stripped_version }}-1_amd64.deb
        asset_name: ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}-linux_amd64.deb
        asset_content_type: application/octet-stream

  windows_build:
    needs: build
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download JAR from artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.jar
        path: ${{ env.OUT_DIR }}

    - name: Setup Java 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Create Standalone for Windows
      run: |
        jpackage --input ${{ env.OUT_DIR }} `
                --verbose `
                --name ${{ env.FILE_NAME }} `
                --main-jar ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.jar `
                --main-class ${{ env.MAIN_CLASS }} `
                --icon assets/icon/${{ env.ICON_NAME }}.ico `
                --win-shortcut `
                --win-menu `
                --app-version ${{ needs.build.outputs.stripped_version }} `
                --java-options "${{ env.JVM_ARGS }}" `
                --type msi `
                --dest .

    - name: List contents of out directory (Windows)
      run: Get-ChildItem -Path .
    
    - name: Attach Windows Standalone to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.release_upload_url }}
        asset_path: ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}.msi
        asset_name: ${{ env.FILE_NAME }}-${{ needs.build.outputs.stripped_version }}-windows.msi
        asset_content_type: application/octet-stream


